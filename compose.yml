services:
  flask-front:
    restart: always
    build: ./dep-flask-front/
    volumes:
      - ./dep-flask-front/app:/app/app
    env_file:
      - ./.env
    environment:
      - AUTH=go-auth:8080/login
    ports:
      - 5000:5000

  go-auth:
    build: ./dep-go-auth/
    restart: always
    env_file:
      - ./.env
    ports:
      - 18080:8080
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  go-catalog:
    build: ./dep-go-catalog/
    restart: always
    env_file:
      - ./.env
    ports:
      - 18081:8080
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  postgres:
    image: docker.io/postgres:alpine
    restart: always
    ports:
      - 5430:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
      
  # swagger-editor:
  #   image: docker.io/swaggerapi/swagger-editor
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./api:/data
  #     
  # swagger-ui:
  #   image: docker.io/swaggerapi/swagger-ui
  #   restart: always
  #   ports:
  #     - 8081:8080
  #   volumes:
  #     - ./api:/data
